#!/bin/bash
# TODO: Notifications
function help_user(){
    tput reset
    cat <<- EOF
		./lazych [flags...]
		Hotkeys:
		    l - read in less
		    h - homepage
		    n/right arrow - next thread
		    b/left arrow - last thread'
		    c - custom thread
		    r - refresh
		    q - quit
		
		Commands:
		    /replies - see replies
		    /delrepies - delete replies
		    /post - make post
		    /delpost - delete post
		    
		Flags:
		    b - board
		    t - thread
		    c - only count threads (don't display headings)
		    h - help
		    
		Press any key to continue.
	EOF
    read -rsn1
}

function refresh_index(){
    main_page="$(curl -s "${lazych_url}")"
}

function list_threads(){
    while curl -sfI "${current_board}/${i}" >&/dev/null; do ((i++)); done
    $1 && return
    
    if $only_count_threads; then
        printf 'This board has %i threads\n' $((i-1))
    else
        for((j=1;j<i;j++)); do curl -s "${current_board}/${j}" 2>/dev/null | head -n2; done
    fi
    
    printf '\e[0m\nEnter a number to navigate to thread: '
    read -r thread_number
}

function check_board(){
    curl -sfI "${lazych_url}/${1}/" >&/dev/null && \
        current_board="${lazych_url}/${1}" && \
        tput reset && \
        echo "${main_page}" | grep "/${1}/"
}

function load_home(){
    tput reset
    refresh_index
    echo "${main_page}"
    printf 'Type board to visit: '
    
    while read -r user_input; do
        check_board "${user_input}" && break
        tput reset
        echo "${main_page}"
        echo 'Invalid thread.'
    done
    
    list_threads true
}

function load_thread(){
    tput reset
    
    until curl -sfI "${current_thread}" >&/dev/null; do
        tput reset
        read -rp 'Thread not found. Enter a number to navigate to thread: ' thread_number
        current_thread="${current_board}/${thread_number}/"
    done
    
    thread_data="$(curl -s "${current_thread}" 2>/dev/null)"
    echo "${thread_data}"
}

lazych_url='https://lazych.net'; only_count_threads=false; i=1
refresh_index

while getopts 'b:t:ch' flag; do
    case "${flag}" in
        b)
            check_board "${OPTARG}"
            current_board="${lazych_url}/${OPTARG}"
            ;;
        t)
            thread_number="${OPTARG}"
            ;;
        c)
            only_count_threads=true
            ;;
        h)
            help_user
            ;;
        *)
            echo 'Invalid flag'
            ;;
    esac
done

initially_count=false
[[ -z "${current_board}" && -n "${thread_number}" || -z "${current_board}" ]] && load_home
[[ -n "${current_board}" && -n "${thread_number}" ]] && initially_count=true
list_threads $initially_count

current_thread="${current_board}/${thread_number}"; load_thread

while read -rsn1 user_input; do
    [[ "${user_input}" == '/' ]] && printf '/' && read -r user_input
    reload_thread=true
    case "${user_input}" in
        r);;
        l)
            echo "${thread_data}" | sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g" | less
            reload_thread=false
            ;;
        h)
            load_home
            current_thread="${current_board}/${thread_number}/"
            ;;
        n|C)
            ((thread_number<i-1 && thread_number++))
            current_thread="${current_board}/${thread_number}/"
            ;;
        b|D)
            ((thread_number>1 && thread_number--))
            current_thread="${current_board}/${thread_number}/"
            ;;
        c)
            printf '\n\e[0mEnter a number to navigate to thread: '
            read -r thread_number
            current_thread="${current_board}/${thread_number}/"
            ;;
        q)
            printf '\n'
            exit
            ;;
        'replies')
            curl -s "${lazych_url}/replies"
            printf 'To clear reply list type /delreplies\n'
            reload_thread=false
            ;;
        'delreplies')
            curl -s "${lazych_url}/replies?clear=y"
            ;;
        'post')
            [[ -z $EDITOR ]] && EDITOR=vim
            $EDITOR /tmp/comment$$ >/dev/tty
            comment="$(cat /tmp/comment$$)"
            [[ -n "${comment}" ]] && curl -s "${current_thread}" -F $"comment=${comment}"
            ;;
        'delpost')
            read -rp 'Enter post number to delete: ' post_number
            curl -s "${current_thread/#${lazych_url}/${lazych_url}/delete}${post_number}"
            sleep 3
            ;;
        'help')
            help_user
            echo "${thread_data}"
            reload_thread=false
            ;;
        *)
            printf 'Invalid input. Type /help for a list of hotkeys\n'
            reload_thread=false
            ;;
    esac
    $reload_thread && load_thread
done
